apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: traefik
spec:
  interval: 24h
  url: https://traefik.github.io/charts


---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
spec:
  interval: 5m
  chart:
    spec:
      chart: traefik
      sourceRef:
        kind: HelmRepository
        name: traefik
      interval: 5m
  values:
    additionalArguments:
      - "--providers.docker.endpoint=tcp://192.168.0.112:2375"
      - "--providers.docker.exposedByDefault=false"
    certResolvers:
      letsencrypt:
        email: willy@weiskopf.me
        tlsChallenge: true
        storage: /data/acme.json
      # TODO: replace "myresolver" everywhere and get rid of this
      myresolver:
        email: willy@weiskopf.me
        tlsChallenge: true
        storage: /data/acme.json
        #caServer: https://acme-staging-v02.api.letsencrypt.org/directory
    ingressClass:
      isDefaultClass: true
    persistence:
      enabled: true
      storageClass: openebs-hostpath
    ports:
      # TODO: these seem to be working for creating the entryPoints...?
      mumble-tcp:
        expose: true
        exposedPort: 64738
        port: 64738
        protocol: TCP
      mumble-udp:
        expose: true
        exposedPort: 64738
        port: 64738
        protocol: UDP
      openvpn-udp:
        expose: true
        exposedPort: 1194
        port: 1194
        protocol: UDP
      sftp:
        expose: true
        exposedPort: 2022
        port: 2022
        protocol: TCP
      syncthing-tcp:
        expose: true
        exposedPort: 22000
        port: 22000
        protocol: TCP
      syncthing-udp:
        expose: true
        exposedPort: 22000
        port: 22000
        protocol: UDP
      syncthing-lan:
        expose: true
        exposedPort: 21027
        port: 21027
        protocol: UDP
      web:
        redirectTo: websecure
#      websecure:
#        tls:
#          enabled: true
#          certResolver: letsencrypt
#          domains:
#            - immortalkeep.com
      webdav:
        expose: true
        exposedPort: 10080
        port: 10080
        protocol: TCP
    providers:
      kubernetesCRD:
        labelSelector: public=true
      kubernetesIngress:
        labelSelector: public=true
    service:
      spec:
        # TODO: validate this worked
        loadBalancerIP: "192.168.0.201"
    #service:
    #  spec:
    #    externalTrafficPolicy: Local


---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: basic-auth
  labels:
    public: "true"
spec:
  basicAuth:
    secret: basic-auth-credentials


---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: dashboard
  labels:
    public: "true"
spec:
  entryPoints:
    - websecure
  routes:
    # TODO: do better than this hard-coded host.  Docs recommend something like traefik.localhost.  That might require a network DNS server or somesuch
    - match: Host(`192.168.0.201`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService
