kind: ConfigMap
apiVersion: v1
metadata:
  name: automatic-ripping-machine-init-scripts
data:
  arm_user_files_setup.sh: |
    #!/bin/bash
    # This script is first to run due to this: https://github.com/phusion/baseimage-docker#running_startup_scripts.
    set -euo pipefail

    export ARM_HOME="/home/arm"

    echo "Adding users to 'render' group"
    usermod -a -G render arm
    usermod -a -G render root

    ### Setup Files
    #chown -R arm:arm /opt/arm

    # setup needed/expected dirs if not found
    SUBDIRS="media media/completed media/raw media/movies media/transcode logs logs/progress db Music .MakeMKV"
    for dir in $SUBDIRS ; do
        thisDir="$ARM_HOME/$dir"
        if [[ ! -d "$thisDir" ]] ; then
            echo "Creating dir: $thisDir"
            mkdir -p "$thisDir"
        fi
    done

    ##### Setup ARM-specific config files if not found
    mkdir -p /etc/arm/config
    CONFS="arm.yaml apprise.yaml"
    for conf in $CONFS; do
        thisConf="/etc/arm/config/${conf}"
        if [[ ! -f "${thisConf}" ]] ; then
            echo "Config not found! Creating config file: ${thisConf}"
            # Don't overwrite with defaults during reinstall
            cp --no-clobber "/opt/arm/setup/${conf}" "${thisConf}"
        fi
    done

    # abcde.conf is expected in /etc by the abcde installation
    cp --no-clobber /opt/arm/setup/.abcde.conf /etc/arm/config/abcde.conf
    ln -sf /etc/arm/config/abcde.conf /etc/abcde.conf
    chown /etc/abcde.conf /etc/arm/config/abcde.conf

  51-docker-arm.rules: |
    # ID_CDROM_MEDIA_BD = Bluray
    # ID_CDROM_MEDIA_DVD = DVD
    # ID_CDROM_MEDIA_CD = CD
    ACTION=="change", SUBSYSTEM=="block", RUN+="/opt/arm/scripts/docker/docker_arm_wrapper.sh %k"

  armui.sh: |
    #!/bin/bash
    echo "Starting web ui"
    chmod +x /opt/arm/arm/runui.py
    exec /bin/python3 /opt/arm/arm/runui.py
