apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: prometheus-community
spec:
  interval: 15m  # 24h
  url: https://prometheus-community.github.io/helm-charts
  #type: oci
  #url: oci://ghcr.io/prometheus-community/charts/kube-prometheus-stack:latest # {"$imagepolicy": "infrastructure:kube-prometheus"}

#---
#apiVersion: image.toolkit.fluxcd.io/v1beta2
#kind: ImageRepository
#metadata:
#  name: kube-prometheus
#spec:
#  image: ghcr.io/prometheus-community/charts/kube-prometheus-stack
#  interval: 15m0s
#
#---
#apiVersion: image.toolkit.fluxcd.io/v1beta2
#kind: ImagePolicy
#metadata:
#  name: kube-prometheus
#spec:
#  imageRepositoryRef:
#    name: kube-prometheus
#  filterTags:
#    pattern: '^(?P<version>[0-9]+\.[0-9]+\.[0-9]+)$'
#    extract: '$version'
#  policy:
#    semver:
#      range: '>=47.0.0'

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 47.0.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      #verify:
      #  provider: cosign
      interval: 60m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    alertmanager:
      enabled: false
    grafana:
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - prometheus-grafana.immortalkeep.com
        tls:
          - hosts:
              - prometheus-grafana.immortalkeep.com
            secretName: prometheus-grafana-ingress-tls
    prometheus:
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - prometheus.immortalkeep.com
        tls:
          - hosts:
              - prometheus.immortalkeep.com
            secretName: prometheus-ingress-tls
      prometheusSpec:
        retention: 24h
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
        podMonitorNamespaceSelector: {}
        #podMonitorSelector:
        #  matchLabels:
        #    app.kubernetes.io/component: monitoring
        serviceMonitorSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false

