apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: traefik
spec:
  interval: 24h
  url: https://traefik.github.io/charts


---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
spec:
  interval: 15m
  chart:
    spec:
      chart: traefik
      # Don't upgrade both traefik-internal and traefik charts at the same time, unless you `flux suspend` one first
      version: 24.0.0
      sourceRef:
        kind: HelmRepository
        name: traefik
      interval: 15m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    additionalArguments:
    - "--api.dashboard=true"
    #  #- "--providers.docker.endpoint=tcp://192.168.0.112:2375"
    #  - "--providers.docker.exposedByDefault=false"
    #deployment:
    #  initContainers:
    #    - name: volume-permissions
    #      image: busybox:latest
    #      command: ["sh", "-c", "touch /data/acme.json; chmod -v 600 /data/acme.json"]
    #      securityContext:
    #        runAsNonRoot: true
    #        runAsGroup: 65532
    #        runAsUser: 65532
    #      volumeMounts:
    #        - name: data
    #          mountPath: /data
    ingressClass:
      isDefaultClass: true
    ingressRoute:
      dashboard:
        enabled: true
        matchRule: Host(`192.168.0.201`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
    metrics:
      prometheus:
        serviceMonitor:
          namespace: infrastructure
    #persistence:
    #  enabled: true
    #  storageClass: openebs-hostpath
    ports:
      # TODO: these seem to be working for creating the entryPoints...?
      mumble-tcp:
        expose: true
        exposedPort: 64738
        port: 64738
        protocol: TCP
      mumble-udp:
        expose: true
        exposedPort: 64738
        port: 64738
        protocol: UDP
      openvpn-udp:
        expose: true
        exposedPort: 1194
        port: 1194
        protocol: UDP
      sftp:
        expose: true
        exposedPort: 2022
        port: 2022
        protocol: TCP
      syncthing-tcp:
        expose: true
        exposedPort: 22000
        port: 22000
        protocol: TCP
      syncthing-udp:
        expose: true
        exposedPort: 22000
        port: 22000
        protocol: UDP
      syncthing-lan:
        expose: true
        exposedPort: 21027
        port: 21027
        protocol: UDP
      web:
        redirectTo: websecure
      webdav:
        expose: true
        exposedPort: 10080
        port: 10080
        protocol: TCP
    providers:
      kubernetesCRD:
        labelSelector: public=true
      kubernetesIngress:
        labelSelector: public=true
    service:
      spec:
        # TODO: validate this worked
        loadBalancerIP: "192.168.0.201"
    #service:
    #  spec:
    #    externalTrafficPolicy: Local


---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: basic-auth
  labels:
    public: "true"
spec:
  basicAuth:
    secret: basic-auth-credentials


#---
#apiVersion: traefik.containo.us/v1alpha1
#kind: IngressRoute
#metadata:
#  name: dashboard
#spec:
#  entryPoints:
#    - websecure
#  routes:
#    # TODO: do better than this hard-coded host.  Docs recommend something like traefik.localhost.  That might require a network DNS server or somesuch
#    - match: Host(`192.168.0.201`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
#      kind: Rule
#      services:
#        - name: api@internal
#          kind: TraefikService

#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: traefik-external
#  annotations:
#    cert-manager.io/cluster-issuer: letsencrypt
#spec:
#  tls:
#    - hosts:
#        - traefik-external.immortalkeep.com
#      secretName: traefik-external-ingress-tls
#  rules:
#  - host: traefik-external.immortalkeep.com
#    http:
#      paths:
#      - pathType: Prefix
#        path: /dashboard
#        backend:
#          service:
#            name: api
#            kind: TraefikService
